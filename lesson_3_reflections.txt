
   
What happens when you initialize a repository? Why do you need to do it?

It creates a hidden .git folder in the directory. The .git file will hold metadata from the project including a record of commits.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It is a place to hold changes before commiting them.
It is not a final storage place. It helps to organize commits.

How can you use the staging area to make sure you have one commit per logical
change?

Only add the files that include changes made to files that pertain to each logical commit at a time.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

When creating different game modes or language versions.

How do the diagrams help you visualize the branch structure?

It helps to visualize the parents for each commit in each branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

It merges all the files of the branch into the master. 

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

Easy way to see conflicts and merge branches...manually it would take a lot longer and possibly increase conflicts.


When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

So that the changes won't effect the master, to prevent accidentally introducing a bug and to better effectively work with others and make decisions on changes before applying them to the core program.